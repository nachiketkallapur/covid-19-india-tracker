{"version":3,"sources":["components/chart/chart.component.jsx","components/tests/tests.component.jsx","api/index.js","components/card/card.component.jsx","components/header/header.component.jsx","components/state-picker/state-picker.component.jsx","App.js","index.js","assets/covid-19-india-tracker(1).jpg"],"names":["summary","totalSamplesTested","historyDataUrl","fetchData","value","url","a","localeCompare","axios","get","response","data","total","deaths","discharged","confirmedCasesIndian","confirmedCasesForeign","lastUpdate","lastOriginUpdate","stateListFromResponse","regional","stateList","map","state","loc","infected","totalConfirmed","recovered","casesIndian","casesForeign","console","log","length","Card","changedCardData","Object","keys","xs","md","Grid","container","className","item","CardContent","Typography","start","end","duration","separator","Date","toDateString","responseData","Chart","stateChoosen","useEffect","fetchfunction","summaryArray","consizedSummaryArray","reverse","filter","index","regionalArray","consizedRegionalArray","tempArray","k","i","j","assign","stateChoosenArray","dateArray","day","labels","datasets","label","pointHoverRadius","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","options","title","display","text","scales","yAxes","scaleLabel","labelString","ticks","min","xAxes","Header","src","covid_img","alt","StatePicker","handleStateChange","FormControl","InputLabel","NativeSelect","defaultValue","onChange","event","target","key","Tests","fetchFunction","App","setState","cardData","this","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5ccfc616.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './chart.styles.scss';\r\nimport { fetchData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst historyDataUrl = \"https://api.rootnet.in/covid19-in/stats/history\";\r\nlet responseData = [], summary;\r\n\r\nconst Chart = ({ stateChoosen }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchfunction = async () => {\r\n            responseData = await fetchData(\"send_history\", historyDataUrl);\r\n            summary = await fetchData(\"send_card_data\", historyDataUrl);\r\n            console.log(summary);\r\n        }\r\n\r\n        fetchfunction();\r\n    }, []);\r\n\r\n    if (responseData.length > 0) {\r\n        let summaryArray = responseData.map(({ summary }) => summary);\r\n        summaryArray = summaryArray.reverse();\r\n        let consizedSummaryArray = summaryArray.filter((item, index) => index <= 19).map(item => item).reverse();\r\n        \r\n        let regionalArray = responseData.map(({ regional }) => regional);\r\n        regionalArray = regionalArray.reverse();\r\n        let consizedRegionalArray = regionalArray.filter((item, index) => index <= 19).map((item) => item).reverse();\r\n\r\n        let tempArray = [], k = 0;\r\n        for (let i = 0; i < 20; i++) {\r\n            tempArray[i] = {};\r\n        }\r\n        for (let i = 0; i < consizedRegionalArray.length; i++) {\r\n            for (let j = 0; j < consizedRegionalArray[i].length; j++) {\r\n                if (consizedRegionalArray[i][j].loc.localeCompare(stateChoosen) === 0) {\r\n                    tempArray[k] = Object.assign(tempArray[k], consizedRegionalArray[i][j]);\r\n                    k++;\r\n                }\r\n            }\r\n        }\r\n\r\n        const stateChoosenArray = (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray : tempArray;\r\n\r\n        let dateArray = responseData.map(({ day }) => day)\r\n        dateArray = dateArray.reverse();\r\n        let consizedDateArray = dateArray.filter((item, index) => index <= 19).map(item => item).reverse();\r\n        \r\n        const data = {\r\n            labels: consizedDateArray,\r\n            datasets: [\r\n                {\r\n                    label: \"Infected\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.total) : stateChoosenArray.map(item => item.totalConfirmed),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(0,0,255,0.2)'],\r\n                    backgroundColor: ['rgba(0,0,255,0.2)'],\r\n                    pointBorderColor: ['rgba(0,0,255,0.2)'],\r\n                    pointBackgroundColor: ['rgba(0,0,255,0.2)']\r\n                },\r\n                {\r\n                    label: \"Active\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.total - item.deaths - item.discharged) : stateChoosenArray.map(item => item.totalConfirmed - item.deaths - item.discharged),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(0,0,255,0.5)'],\r\n                    backgroundColor: ['rgba(0,0,255,0.5)'],\r\n                    pointBorderColor: ['rgba(0,0,255,0.5)'],\r\n                    pointBackgroundColor: ['rgba(0,0,255,0.5)']\r\n\r\n                },\r\n                {\r\n                    label: \"Recovered\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.discharged) : stateChoosenArray.map(item => item.discharged),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(0,255,0,0.5)'],\r\n                    backgroundColor: ['rgba(0,255,0,0.5)'],\r\n                    pointBorderColor: ['rgba(0,255,0,0.5)'],\r\n                    pointBackgroundColor: ['rgba(0,255,0,0.5)']\r\n\r\n                },\r\n                {\r\n                    label: \"Deaths\",\r\n                    data: (stateChoosen === '' || stateChoosen === 'India') ? consizedSummaryArray.map((item) => item.deaths) : stateChoosenArray.map(item => item.deaths),\r\n                    pointHoverRadius: 5,\r\n                    borderColor: ['rgba(255,0,0,0.8)'],\r\n                    backgroundColor: ['rgba(255,0,0,0.8)'],\r\n                    pointBorderColor: ['rgba(255,0,0,0.8)'],\r\n                    pointBackgroundColor: ['rgba(255,0,0,0.8)']\r\n                }\r\n            ]\r\n        };\r\n\r\n        const options = {\r\n            title: {\r\n                display: true,\r\n                text: \"COVID-19 Data Analytics for last 20 days\"\r\n            },\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Number of cases'\r\n                        },\r\n                        ticks: {\r\n                            min: 0,\r\n                        }\r\n                    }\r\n                ],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Last 20 Days'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n\r\n        return (\r\n            <center>\r\n                <div className='chart-container'>\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n            </center>\r\n\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <center>\r\n                <big>\r\n                    Loading... App Please Wait!<br/>\r\n                    If the problem persists refresh the page\r\n                </big>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n","import React,{useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './tests.styles.scss';\r\n\r\nconst testDataUrl = \"https://api.rootnet.in/covid19-in/stats/testing/latest\";\r\nlet totalSamplesTested;\r\n\r\nconst Tests = () =>{\r\n    useEffect(() => {\r\n        const fetchFunction = async () =>{\r\n            const response = await axios.get(testDataUrl);\r\n            totalSamplesTested = response.data.data.totalSamplesTested;\r\n        }\r\n\r\n        fetchFunction();\r\n    } )\r\n\r\n    return(\r\n        <div className = 'tests'>\r\n            <marquee><big>India has tested {totalSamplesTested} samples till today</big></marquee>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tests;","import axios from 'axios';\r\n\r\nconst totalDataUrl = \"https://api.rootnet.in/covid19-in/stats/latest\";\r\nconst historyDataUrl = \"https://api.rootnet.in/covid19-in/stats/history\";\r\n\r\nexport const fetchData = async (value, url) => {\r\n    if (url.localeCompare(totalDataUrl) === 0) {\r\n        const response = await axios.get(url);\r\n\r\n        \r\n\r\n        const { total, deaths, discharged, confirmedCasesIndian, confirmedCasesForeign } = response.data.data.summary;\r\n        const lastUpdate = response.data.lastOriginUpdate;\r\n        const stateListFromResponse = response.data.data.regional;\r\n\r\n        const stateList = stateListFromResponse.map(({ loc, totalConfirmed, deaths, discharged, confirmedCasesIndian, confirmedCasesForeign }) => {\r\n            return {\r\n                state: loc,\r\n                infected: totalConfirmed,\r\n                deaths: deaths,\r\n                recovered: discharged,\r\n                casesIndian: confirmedCasesIndian,\r\n                casesForeign: confirmedCasesForeign,\r\n                lastUpdate\r\n            }\r\n        })\r\n\r\n        if (value === \"send_state_data\") {\r\n            return stateList;\r\n        }\r\n\r\n        else if (value === \"send_card_data\") {\r\n            return {\r\n                infected: total,\r\n                deaths: deaths,\r\n                recovered: discharged,\r\n                casesIndian: confirmedCasesIndian,\r\n                casesForeign: confirmedCasesForeign,\r\n                lastUpdate\r\n            };\r\n        }\r\n        \r\n    }\r\n\r\n    else if (url.localeCompare(historyDataUrl) === 0) {\r\n        const response = await axios.get(historyDataUrl);\r\n\r\n        // const lastUpdate = response.data.lastOriginUpdate;\r\n\r\n        console.log(response.data.data[response.data.data.length - 1].regional);\r\n         \r\n        \r\n        // let totalValue = 0, deathsValue = 0, recoveredValue = 0, casesIndianValue = 0, casesForeignValue = 0;\r\n\r\n        // for(let i=0;i < response.data.data[response.data.data.length - 1].regional.length -1 ; i++ ){\r\n        //     let item = response.data.data[response.data.data.length - 1].regional[i];\r\n        //     totalValue = totalValue + item.totalConfirmed;\r\n        //     deathsValue = deathsValue + item.deaths;\r\n        //     recoveredValue = recoveredValue + item.discharged;\r\n        //     casesIndianValue = casesIndianValue + item.confirmedCasesIndian;\r\n        //     casesForeignValue = casesForeignValue + item.confirmedCasesForeign;\r\n        // }\r\n        \r\n        if(value===\"send_history\"){\r\n            return response.data.data;\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './card.styles.scss';\r\nimport { Grid, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst Card = ({ changedCardData }) => {\r\n    if (Object.keys(changedCardData).length === 0) {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    const { infected, recovered, deaths, lastUpdate } = changedCardData;\r\n\r\n    return (\r\n        <div xs={12} md={3}>\r\n            <Grid container className='grid-container'>\r\n            <Grid item className={`infected common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Infected</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={infected} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of affected by COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item className={`active common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Active</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={infected - recovered - deaths} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item className={`recovered common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Recovered</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={recovered} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item className={`deaths common-to-card`}>\r\n                <CardContent>\r\n                    <Typography><b>Deaths</b></Typography>\r\n                    <Typography>\r\n                        <CountUp start={0} end={deaths} duration={1.5} separator=',' />\r\n                    </Typography>\r\n                    <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography>Number of deaths from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './header.styles.scss';\r\nimport covid_img from '../../assets/covid-19-india-tracker(1).jpg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <center className='header'>\r\n            <img src={covid_img} alt=\"covid-image\" className='covid-image'/>\r\n            COVID-19_INDIA_TRACKER\r\n            <img src={covid_img} alt=\"covid-image\" className='covid-image'/>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n            ","import React from 'react';\r\nimport { FormControl, NativeSelect, InputLabel } from '@material-ui/core';\r\nimport './state-picker.styles.scss'; \r\n\r\nconst StatePicker = ({ handleStateChange, stateList }) => {\r\n\r\n    if(stateList.length === 0){\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n        \r\n    return (\r\n        <center className='form-control'>\r\n            <FormControl >\r\n            <InputLabel >Select any one State/U T</InputLabel>\r\n            <NativeSelect defaultValue=\"India\" onChange={(event) => handleStateChange(event.target.value)} className='native-select' >\r\n                <option value=\"India\">India</option>\r\n                {\r\n                    stateList.map(({state}, index) => (index < stateList.length - 1) ? <option key={index} value={state}>{state}</option> : null) \r\n                }\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </center>\r\n        \r\n    )\r\n}\r\n\r\nexport default StatePicker;\r\n                \r\n                \r\n\r\n   ","import React from 'react';\r\nimport './App.scss';\r\nimport { fetchData } from './api';\r\nimport { Header, Card, StatePicker, Chart } from './components';\r\nimport Tests from './components/tests/tests.component';\r\n\r\nconst totalDataUrl = \"https://api.rootnet.in/covid19-in/stats/latest\";\r\nconst historyDataUrl = \"https://api.rootnet.in/covid19-in/stats/history\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            stateChoosen: '',\r\n            stateList: [],\r\n            cardData: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ stateList: await fetchData(\"send_state_data\",totalDataUrl), cardData: await fetchData(\"send_card_data\", totalDataUrl) });\r\n    }\r\n\r\n    handleStateChange = async (state) => {\r\n        await this.setState({ stateChoosen: state });\r\n    }\r\n\r\n    render() {\r\n        const { stateChoosen, stateList, cardData } = this.state;\r\n\r\n        console.log(cardData)\r\n\r\n        let changedCardData = {};\r\n        changedCardData = Object.assign(changedCardData, cardData);\r\n\r\n        stateList.filter((data) => {\r\n            if (data.state.localeCompare(stateChoosen) === 0) {\r\n                changedCardData = Object.assign(changedCardData, data);\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div className='component-container'>\r\n                <Header />\r\n                <Tests />\r\n                <Card changedCardData={changedCardData} />\r\n                <StatePicker stateList={stateList} handleStateChange={this.handleStateChange} />\r\n                <Chart stateChoosen={stateChoosen}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/covid-19-india-tracker(1).3dcebebb.jpg\";"],"sourceRoot":""}